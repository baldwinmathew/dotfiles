#!/bin/bash

if [[ -h "ve" && -d "ve" ]]; then
    VE_DIR="`readlink ve 2>/dev/null`"
    VE_NAME="`basename $VE_DIR 2>/dev/null`"
    if [[ ! $VIRTUAL_ENV == $VE_DIR ]]; then
        #workon $VE_NAME
        printf "\n\e${NOWELLS_RED_COLOR}Warning!!!\e${NOWELLS_DEFAULT_COLOR} You are inside of a virtualenv.\n"
        printf "Please run \e${NOWELLS_GREEN_COLOR}workon $VE_NAME\e${NOWELLS_DEFAULT_COLOR}\n"
    fi
fi

# Provide feedback if we are not currently working within the selected VIRTUAL_ENV
if [[ -ne "$VIRTUAL_ENV" ]]; then
    PROJECT_DIR="`readlink $VIRTUAL_ENV/project_symlink 2> /dev/null`"
    CURRENT_DIR="`pwd`"
    if [[ -ne "$PROJECT_DIR" ]]; then
        if [[ ! $CURRENT_DIR =~ $PROJECT_DIR ]]; then
            printf "\n\e${NOWELLS_RED_COLOR}`basename $VIRTUAL_ENV`\e${NOWELLS_DEFAULT_COLOR} is currently active.\n"
            printf "Please run \e${NOWELLS_GREEN_COLOR}deactivate\e${NOWELLS_DEFAULT_COLOR} or return to \e${NOWELLS_PINK_COLOR}$PROJECT_DIR\e${NOWELLS_DEFAULT_COLOR}\n"
        fi
    fi
fi


if [[ "$BASE_TERM" == "screen" ]]; then
    # Setup prompt title name for screen session tab naming.
    PROMPT_TITLE='shell'
    if [[ -ne "$VIRTUAL_ENV" ]]; then
        PROMPT_TITLE=`basename $VIRTUAL_ENV`
    else
        DIR=$PWD
        LASTDIR=""
        until [[ $LASTDIR = $DIR ]]; do
            if [ -f $DIR/.git/HEAD ]; then
                PROMPT_TITLE=$(basename $DIR)
                break
            fi
            if [ -f $DIR/.hg/branch ]; then
                PROMPT_TITLE=$(basename $DIR)
                break
            fi
            LASTDIR=$DIR
            DIR=$(dirname $DIR)
        done
    fi
    echo -ne "\ek$PROMPT_TITLE\e\\"
fi
